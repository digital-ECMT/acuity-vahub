import {TestBed, inject} from '@angular/core/testing';
import {StudyService} from './StudyService';
import {HttpClientTestingModule} from '@angular/common/http/testing';
import * as _ from 'lodash';

describe('StudyService class', () => {
    let service;

    beforeEach(() => {
        TestBed.configureTestingModule({
            imports: [HttpClientTestingModule],
            providers: [
                StudyService
            ]
        });
    });

    beforeEach(inject([StudyService], (_service: StudyService) => {
        service = _service;
    }));

    it('should get metadata', () => {

        const roi: Request.AcuityObjectIdentityWithPermission[] = [{
            autoGeneratedId: true,
            id: 12,
            identifier: 12,
            origin: 'DETECT',
            name: 'vis 1',
            rolePermissionMask: 3,
            viewPermissionMask: 3,
            supertype: 'string',
            canView: true,
            type: 'string',
            shortNameByType: 'test'
        }];
        service.getMetadataInfoObservable(roi).subscribe((res) => {
            expect(res.length).toBe(0);
        });
    });

    describe('WHEN creating display names', () => {
        it('SHOULD always return an array', () => {
            const datasets = [];
            const displayNames = service.createDisplayNames(datasets);

            expect(_.isArray(displayNames)).toBeTruthy();
        });

        it('SHOULD return an array of items each containing Drug Programme, Clinical Study and Type', () => {
            const ds: any[] = [{
                autoGeneratedId: false,
                typeForJackson: 'com.acuity.va.security.acl.domain.DetectDataset',
                id: 401234984,
                identifier: 401234984,
                name: 'Dummy Data v.5 - 11-Jan-2017',
                type: 'com.acuity.va.security.acl.domain.DetectDataset',
                rolePermissionMask: 522240,
                supertype: 'com.acuity.va.security.acl.domain.Dataset',
                viewPermissionMask: 3,
                drugProgramme: 'Drug X',
                clinicalStudyName: 'DummyData05',
                clinicalStudyCode: 'DummyData05',
                canView: true,
                shortNameByType: 'mock'
            }];

            const [{name}] = ds;

            const names = service.createDisplayNames(ds);

            expect(names[0]).toContain(name);
        });

        it('SHOULD return sorted array', () => {
            const ds: any[] = [{
                autoGeneratedId: false,
                typeForJackson: 'com.acuity.va.security.acl.domain.DetectDataset',
                id: 401234984,
                identifier: 401234984,
                name: '3rd Dataset',
                type: 'com.acuity.va.security.acl.domain.DetectDataset',
                rolePermissionMask: 522240,
                supertype: 'com.acuity.va.security.acl.domain.Dataset',
                viewPermissionMask: 3,
                drugProgramme: '2nd Programme',
                clinicalStudyName: 'DummyData05',
                clinicalStudyCode: 'DummyData05',
                canView: true,
                shortNameByType: 'mock'
            }, {
                autoGeneratedId: false,
                typeForJackson: 'com.acuity.va.security.acl.domain.DetectDataset',
                id: 401234984,
                identifier: 401234984,
                name: '1st Dataset',
                type: 'com.acuity.va.security.acl.domain.DetectDataset',
                rolePermissionMask: 522240,
                supertype: 'com.acuity.va.security.acl.domain.Dataset',
                viewPermissionMask: 3,
                drugProgramme: '1st Programme',
                clinicalStudyName: 'DummyData05',
                clinicalStudyCode: 'DummyData05',
                canView: true,
                shortNameByType: 'mock'
            }, {
                autoGeneratedId: false,
                typeForJackson: 'com.acuity.va.security.acl.domain.DetectDataset',
                id: 401234984,
                identifier: 401234984,
                name: '2nd Dataset',
                type: 'com.acuity.va.security.acl.domain.DetectDataset',
                rolePermissionMask: 522240,
                supertype: 'com.acuity.va.security.acl.domain.Dataset',
                viewPermissionMask: 3,
                drugProgramme: '3rd Programme',
                clinicalStudyName: 'DummyData05',
                clinicalStudyCode: 'DummyData05',
                canView: true,
                shortNameByType: 'mock'
            }];

            const actualOutput = service.createDisplayNames(ds);
            const expectedOutput = [
                '1st Dataset',
                '2nd Dataset',
                '3rd Dataset'
            ];

            expect(actualOutput).toEqual(expectedOutput);
        });
    });
});
